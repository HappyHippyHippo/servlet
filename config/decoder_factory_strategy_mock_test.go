// Code generated by MockGen. DO NOT EDIT.
// Source: config/decoder_factory_strategy.go

// Package config is a generated GoMock package.
package config

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDecoderFactoryStrategy is a mock of DecoderFactoryStrategy interface
type MockDecoderFactoryStrategy struct {
	ctrl     *gomock.Controller
	recorder *MockDecoderFactoryStrategyMockRecorder
}

// MockDecoderFactoryStrategyMockRecorder is the mock recorder for MockDecoderFactoryStrategy
type MockDecoderFactoryStrategyMockRecorder struct {
	mock *MockDecoderFactoryStrategy
}

// NewMockDecoderFactoryStrategy creates a new mock instance
func NewMockDecoderFactoryStrategy(ctrl *gomock.Controller) *MockDecoderFactoryStrategy {
	mock := &MockDecoderFactoryStrategy{ctrl: ctrl}
	mock.recorder = &MockDecoderFactoryStrategyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDecoderFactoryStrategy) EXPECT() *MockDecoderFactoryStrategyMockRecorder {
	return m.recorder
}

// Accept mocks base method
func (m *MockDecoderFactoryStrategy) Accept(format string, args ...interface{}) bool {
	m.ctrl.T.Helper()
	varargs := []interface{}{format}
	for _, a := range args {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Accept", varargs...)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Accept indicates an expected call of Accept
func (mr *MockDecoderFactoryStrategyMockRecorder) Accept(format interface{}, args ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{format}, args...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Accept", reflect.TypeOf((*MockDecoderFactoryStrategy)(nil).Accept), varargs...)
}

// Create mocks base method
func (m *MockDecoderFactoryStrategy) Create(args ...interface{}) (Decoder, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range args {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Create", varargs...)
	ret0, _ := ret[0].(Decoder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockDecoderFactoryStrategyMockRecorder) Create(args ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDecoderFactoryStrategy)(nil).Create), args...)
}
