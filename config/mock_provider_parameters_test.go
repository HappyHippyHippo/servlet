// Code generated by MockGen. DO NOT EDIT.
// Source: config/provider_parameters.go

// Package config is a generated GoMock package.
package config

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockProviderParameters is a mock of ProviderParameters interface
type MockProviderParameters struct {
	ctrl     *gomock.Controller
	recorder *MockProviderParametersMockRecorder
}

// MockProviderParametersMockRecorder is the mock recorder for MockProviderParameters
type MockProviderParametersMockRecorder struct {
	mock *MockProviderParameters
}

// NewMockProviderParameters creates a new mock instance
func NewMockProviderParameters(ctrl *gomock.Controller) *MockProviderParameters {
	mock := &MockProviderParameters{ctrl: ctrl}
	mock.recorder = &MockProviderParametersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProviderParameters) EXPECT() *MockProviderParametersMockRecorder {
	return m.recorder
}

// GetID mocks base method
func (m *MockProviderParameters) GetID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetID indicates an expected call of GetID
func (mr *MockProviderParametersMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockProviderParameters)(nil).GetID))
}

// SetID mocks base method
func (m *MockProviderParameters) SetID(id string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetID", id)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetID indicates an expected call of SetID
func (mr *MockProviderParametersMockRecorder) SetID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetID", reflect.TypeOf((*MockProviderParameters)(nil).SetID), id)
}

// GetFileSystemID mocks base method
func (m *MockProviderParameters) GetFileSystemID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileSystemID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFileSystemID indicates an expected call of GetFileSystemID
func (mr *MockProviderParametersMockRecorder) GetFileSystemID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileSystemID", reflect.TypeOf((*MockProviderParameters)(nil).GetFileSystemID))
}

// SetFileSystemID mocks base method
func (m *MockProviderParameters) SetFileSystemID(id string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetFileSystemID", id)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetFileSystemID indicates an expected call of SetFileSystemID
func (mr *MockProviderParametersMockRecorder) SetFileSystemID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetFileSystemID", reflect.TypeOf((*MockProviderParameters)(nil).SetFileSystemID), id)
}

// GetLoaderID mocks base method
func (m *MockProviderParameters) GetLoaderID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoaderID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLoaderID indicates an expected call of GetLoaderID
func (mr *MockProviderParametersMockRecorder) GetLoaderID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoaderID", reflect.TypeOf((*MockProviderParameters)(nil).GetLoaderID))
}

// SetLoaderID mocks base method
func (m *MockProviderParameters) SetLoaderID(id string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetLoaderID", id)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetLoaderID indicates an expected call of SetLoaderID
func (mr *MockProviderParametersMockRecorder) SetLoaderID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLoaderID", reflect.TypeOf((*MockProviderParameters)(nil).SetLoaderID), id)
}

// GetSourceFactoryID mocks base method
func (m *MockProviderParameters) GetSourceFactoryID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSourceFactoryID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSourceFactoryID indicates an expected call of GetSourceFactoryID
func (mr *MockProviderParametersMockRecorder) GetSourceFactoryID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSourceFactoryID", reflect.TypeOf((*MockProviderParameters)(nil).GetSourceFactoryID))
}

// SetSourceFactoryID mocks base method
func (m *MockProviderParameters) SetSourceFactoryID(id string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetSourceFactoryID", id)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetSourceFactoryID indicates an expected call of SetSourceFactoryID
func (mr *MockProviderParametersMockRecorder) SetSourceFactoryID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSourceFactoryID", reflect.TypeOf((*MockProviderParameters)(nil).SetSourceFactoryID), id)
}

// GetDecoderFactoryID mocks base method
func (m *MockProviderParameters) GetDecoderFactoryID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDecoderFactoryID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetDecoderFactoryID indicates an expected call of GetDecoderFactoryID
func (mr *MockProviderParametersMockRecorder) GetDecoderFactoryID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDecoderFactoryID", reflect.TypeOf((*MockProviderParameters)(nil).GetDecoderFactoryID))
}

// SetDecoderFactoryID mocks base method
func (m *MockProviderParameters) SetDecoderFactoryID(id string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetDecoderFactoryID", id)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetDecoderFactoryID indicates an expected call of SetDecoderFactoryID
func (mr *MockProviderParametersMockRecorder) SetDecoderFactoryID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDecoderFactoryID", reflect.TypeOf((*MockProviderParameters)(nil).SetDecoderFactoryID), id)
}

// GetObserveFrequency mocks base method
func (m *MockProviderParameters) GetObserveFrequency() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObserveFrequency")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetObserveFrequency indicates an expected call of GetObserveFrequency
func (mr *MockProviderParametersMockRecorder) GetObserveFrequency() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObserveFrequency", reflect.TypeOf((*MockProviderParameters)(nil).GetObserveFrequency))
}

// SetObserveFrequency mocks base method
func (m *MockProviderParameters) SetObserveFrequency(frequency time.Duration) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetObserveFrequency", frequency)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetObserveFrequency indicates an expected call of SetObserveFrequency
func (mr *MockProviderParametersMockRecorder) SetObserveFrequency(frequency interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetObserveFrequency", reflect.TypeOf((*MockProviderParameters)(nil).SetObserveFrequency), frequency)
}

// GetBaseSourceID mocks base method
func (m *MockProviderParameters) GetBaseSourceID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBaseSourceID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBaseSourceID indicates an expected call of GetBaseSourceID
func (mr *MockProviderParametersMockRecorder) GetBaseSourceID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBaseSourceID", reflect.TypeOf((*MockProviderParameters)(nil).GetBaseSourceID))
}

// SetBaseSourceID mocks base method
func (m *MockProviderParameters) SetBaseSourceID(id string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetBaseSourceID", id)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetBaseSourceID indicates an expected call of SetBaseSourceID
func (mr *MockProviderParametersMockRecorder) SetBaseSourceID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetBaseSourceID", reflect.TypeOf((*MockProviderParameters)(nil).SetBaseSourceID), id)
}

// GetBaseSourcePath mocks base method
func (m *MockProviderParameters) GetBaseSourcePath() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBaseSourcePath")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBaseSourcePath indicates an expected call of GetBaseSourcePath
func (mr *MockProviderParametersMockRecorder) GetBaseSourcePath() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBaseSourcePath", reflect.TypeOf((*MockProviderParameters)(nil).GetBaseSourcePath))
}

// SetBaseSourcePath mocks base method
func (m *MockProviderParameters) SetBaseSourcePath(path string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetBaseSourcePath", path)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetBaseSourcePath indicates an expected call of SetBaseSourcePath
func (mr *MockProviderParametersMockRecorder) SetBaseSourcePath(path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetBaseSourcePath", reflect.TypeOf((*MockProviderParameters)(nil).SetBaseSourcePath), path)
}

// GetBaseSourceFormat mocks base method
func (m *MockProviderParameters) GetBaseSourceFormat() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBaseSourceFormat")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBaseSourceFormat indicates an expected call of GetBaseSourceFormat
func (mr *MockProviderParametersMockRecorder) GetBaseSourceFormat() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBaseSourceFormat", reflect.TypeOf((*MockProviderParameters)(nil).GetBaseSourceFormat))
}

// SetBaseSourceFormat mocks base method
func (m *MockProviderParameters) SetBaseSourceFormat(format string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetBaseSourceFormat", format)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetBaseSourceFormat indicates an expected call of SetBaseSourceFormat
func (mr *MockProviderParametersMockRecorder) SetBaseSourceFormat(format interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetBaseSourceFormat", reflect.TypeOf((*MockProviderParameters)(nil).SetBaseSourceFormat), format)
}
