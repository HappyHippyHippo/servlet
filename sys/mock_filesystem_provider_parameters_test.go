// Code generated by MockGen. DO NOT EDIT.
// Source: filesystem_provider_parameters.go

// Package sys is a generated GoMock package.
package sys

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFileSystemProviderParameters is a mock of FileSystemProviderParameters interface
type MockFileSystemProviderParameters struct {
	ctrl     *gomock.Controller
	recorder *MockFileSystemProviderParametersMockRecorder
}

// MockFileSystemProviderParametersMockRecorder is the mock recorder for MockFileSystemProviderParameters
type MockFileSystemProviderParametersMockRecorder struct {
	mock *MockFileSystemProviderParameters
}

// NewMockFileSystemProviderParameters creates a new mock instance
func NewMockFileSystemProviderParameters(ctrl *gomock.Controller) *MockFileSystemProviderParameters {
	mock := &MockFileSystemProviderParameters{ctrl: ctrl}
	mock.recorder = &MockFileSystemProviderParametersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFileSystemProviderParameters) EXPECT() *MockFileSystemProviderParametersMockRecorder {
	return m.recorder
}

// GetID mocks base method
func (m *MockFileSystemProviderParameters) GetID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetID indicates an expected call of GetID
func (mr *MockFileSystemProviderParametersMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockFileSystemProviderParameters)(nil).GetID))
}

// SetID mocks base method
func (m *MockFileSystemProviderParameters) SetID(id string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetID", id)
}

// SetID indicates an expected call of SetID
func (mr *MockFileSystemProviderParametersMockRecorder) SetID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetID", reflect.TypeOf((*MockFileSystemProviderParameters)(nil).SetID), id)
}
