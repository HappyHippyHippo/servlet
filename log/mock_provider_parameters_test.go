// Code generated by MockGen. DO NOT EDIT.
// Source: log/provider_parameters.go

// Package log is a generated GoMock package.
package log

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockProviderParameters is a mock of ProviderParameters interface
type MockProviderParameters struct {
	ctrl     *gomock.Controller
	recorder *MockProviderParametersMockRecorder
}

// MockProviderParametersMockRecorder is the mock recorder for MockProviderParameters
type MockProviderParametersMockRecorder struct {
	mock *MockProviderParameters
}

// NewMockProviderParameters creates a new mock instance
func NewMockProviderParameters(ctrl *gomock.Controller) *MockProviderParameters {
	mock := &MockProviderParameters{ctrl: ctrl}
	mock.recorder = &MockProviderParametersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProviderParameters) EXPECT() *MockProviderParametersMockRecorder {
	return m.recorder
}

// GetID mocks base method
func (m *MockProviderParameters) GetID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetID indicates an expected call of GetID
func (mr *MockProviderParametersMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockProviderParameters)(nil).GetID))
}

// SetID mocks base method
func (m *MockProviderParameters) SetID(id string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetID", id)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetID indicates an expected call of SetID
func (mr *MockProviderParametersMockRecorder) SetID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetID", reflect.TypeOf((*MockProviderParameters)(nil).SetID), id)
}

// GetFileSystemID mocks base method
func (m *MockProviderParameters) GetFileSystemID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileSystemID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFileSystemID indicates an expected call of GetFileSystemID
func (mr *MockProviderParametersMockRecorder) GetFileSystemID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileSystemID", reflect.TypeOf((*MockProviderParameters)(nil).GetFileSystemID))
}

// SetFileSystemID mocks base method
func (m *MockProviderParameters) SetFileSystemID(id string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetFileSystemID", id)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetFileSystemID indicates an expected call of SetFileSystemID
func (mr *MockProviderParametersMockRecorder) SetFileSystemID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetFileSystemID", reflect.TypeOf((*MockProviderParameters)(nil).SetFileSystemID), id)
}

// GetConfigID mocks base method
func (m *MockProviderParameters) GetConfigID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetConfigID indicates an expected call of GetConfigID
func (mr *MockProviderParametersMockRecorder) GetConfigID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigID", reflect.TypeOf((*MockProviderParameters)(nil).GetConfigID))
}

// SetConfigID mocks base method
func (m *MockProviderParameters) SetConfigID(id string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetConfigID", id)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetConfigID indicates an expected call of SetConfigID
func (mr *MockProviderParametersMockRecorder) SetConfigID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetConfigID", reflect.TypeOf((*MockProviderParameters)(nil).SetConfigID), id)
}

// GetFormatterFactoryID mocks base method
func (m *MockProviderParameters) GetFormatterFactoryID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFormatterFactoryID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFormatterFactoryID indicates an expected call of GetFormatterFactoryID
func (mr *MockProviderParametersMockRecorder) GetFormatterFactoryID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFormatterFactoryID", reflect.TypeOf((*MockProviderParameters)(nil).GetFormatterFactoryID))
}

// SetFormatterFactoryID mocks base method
func (m *MockProviderParameters) SetFormatterFactoryID(id string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetFormatterFactoryID", id)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetFormatterFactoryID indicates an expected call of SetFormatterFactoryID
func (mr *MockProviderParametersMockRecorder) SetFormatterFactoryID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetFormatterFactoryID", reflect.TypeOf((*MockProviderParameters)(nil).SetFormatterFactoryID), id)
}

// GetStreamFactoryID mocks base method
func (m *MockProviderParameters) GetStreamFactoryID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStreamFactoryID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetStreamFactoryID indicates an expected call of GetStreamFactoryID
func (mr *MockProviderParametersMockRecorder) GetStreamFactoryID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStreamFactoryID", reflect.TypeOf((*MockProviderParameters)(nil).GetStreamFactoryID))
}

// SetStreamFactoryID mocks base method
func (m *MockProviderParameters) SetStreamFactoryID(id string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetStreamFactoryID", id)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetStreamFactoryID indicates an expected call of SetStreamFactoryID
func (mr *MockProviderParametersMockRecorder) SetStreamFactoryID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetStreamFactoryID", reflect.TypeOf((*MockProviderParameters)(nil).SetStreamFactoryID), id)
}

// GetLoaderID mocks base method
func (m *MockProviderParameters) GetLoaderID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoaderID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLoaderID indicates an expected call of GetLoaderID
func (mr *MockProviderParametersMockRecorder) GetLoaderID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoaderID", reflect.TypeOf((*MockProviderParameters)(nil).GetLoaderID))
}

// SetLoaderID mocks base method
func (m *MockProviderParameters) SetLoaderID(id string) ProviderParameters {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetLoaderID", id)
	ret0, _ := ret[0].(ProviderParameters)
	return ret0
}

// SetLoaderID indicates an expected call of SetLoaderID
func (mr *MockProviderParametersMockRecorder) SetLoaderID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLoaderID", reflect.TypeOf((*MockProviderParameters)(nil).SetLoaderID), id)
}
